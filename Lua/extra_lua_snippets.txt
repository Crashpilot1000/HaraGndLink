--Init A registers
local A2 = model.getTelemetryChannel(1)
if A2 .unit ~= 3 or A2 .range ~=1024 or A2 .offset ~=0 then
        A2.unit = 3
        A2.range = 1024
        A2.offset = 0
        model.setTelemetryChannel(1, A2)
end
		
local A3 = model.getTelemetryChannel(2)
if A3.unit ~= 3 or A3.range ~=362 or A3.offset ~=-180 then
        A3.unit = 3
        A3.range = 362
        A3.offset = -180
        A3.alarm1 = -180
        A3.alarm2 = -180
        model.setTelemetryChannel(2, A3)
end

local A4 = model.getTelemetryChannel(3)
if A4.unit ~= 3 or A4.range ~=362 or A4.offset ~=-180 then
        A4.unit = 3
        A4.range = 362
        A4.offset = -180
        A4.alarm1 = -180
        A4.alarm2 = -180
        model.setTelemetryChannel(3, A4)
end



    

local debugX = 150
local debugLabelWidth = 60
local debugRowHeight = 7

          
local function debugNum(row, label, msg)
    local y = row * debugRowHeight - 6
    lcd.drawText(debugX, y, label, SMLSIZE)
    lcd.drawNumber(debugX+debugLabelWidth, y, msg, SMLSIZE)
end

local function debugText(row, label, msg)
    local y = row * debugRowHeight - 6
    lcd.drawText(debugX, y, label, SMLSIZE)
    lcd.drawText(debugX+debugLabelWidth-20, y, msg, SMLSIZE)
end


local function drawCircle(x, y, radius)
    local circleSegmentDegrees = 15
	for i = 0, 359, circleSegmentDegrees do
		local xStart, yStart = getXYAtAngle(x, y, i, radius)					
		local xEnd, yEnd = getXYAtAngle(x, y, i + circleSegmentDegrees, radius)			
		lcd.drawLine(xStart, yStart, xEnd, yEnd, SOLID, FORCE)		
	end
end